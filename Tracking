-- Step 1: Create a Temporary Table
CREATE TABLE #DTC_TraceResults (
    event_name VARCHAR(50),
    transaction_id VARCHAR(50),
    [time] DATETIME,
    client_hostname VARCHAR(50),
    client_app_name VARCHAR(50),
    sql_text NVARCHAR(MAX),
    session_id INT,
    username VARCHAR(50),
    client_connection_id VARCHAR(50)
);

--table for logging 
CREATE TABLE UtilityDatabase.dbo.DTC_TraceResults (
    event_name VARCHAR(50),
    transaction_id VARCHAR(50),
    [time] DATETIME,
    client_hostname VARCHAR(50),
    client_app_name VARCHAR(50),
    sql_text NVARCHAR(MAX),
    session_id INT,
    username VARCHAR(50),
    client_connection_id VARCHAR(50),
    CONSTRAINT PK_DTC_Trace PRIMARY KEY (transaction_id, [time]) -- Assuming transaction_id and time uniquely identify each record
);

-- Step 2: Insert Data into the Temporary Table
INSERT INTO #DTC_TraceResults (event_name, transaction_id, [time], client_hostname, client_app_name, sql_text, session_id, username, client_connection_id)
SELECT
    event_data_xml.value('(event/@name)[1]', 'varchar(50)') AS event_name,
    event_data_xml.value('(event/data[@name="transaction_id"]/value)[1]', 'varchar(50)') AS transaction_id,
    event_data_xml.value('(event/data[@name="time"]/value)[1]', 'datetime') AS [time],
    event_data_xml.value('(event/action[@name="client_hostname"]/value)[1]', 'varchar(50)') AS client_hostname,
    event_data_xml.value('(event/action[@name="client_app_name"]/value)[1]', 'varchar(50)') AS client_app_name,
    event_data_xml.value('(event/action[@name="sql_text"]/value)[1]', 'nvarchar(max)') AS sql_text,
    event_data_xml.value('(event/action[@name="session_id"]/value)[1]', 'int') AS session_id,
    event_data_xml.value('(event/action[@name="username"]/value)[1]', 'varchar(50)') AS username,
    event_data_xml.value('(event/action[@name="client_connection_id"]/value)[1]', 'varchar(50)') AS client_connection_id
FROM
    sys.fn_xe_file_target_read_file('D:\DTC_Trace*.xel', NULL, NULL, NULL) 
    CROSS APPLY (SELECT CAST(event_data AS XML) AS event_data_xml) AS x
WHERE
    event_data_xml.value('(event/@name)[1]', 'varchar(50)') IN ('dtc_transaction', 'dtc_transaction_recovery');

-- Step 3: Select Data Where `client_hostname` Is Not Null or Empty
SELECT *
FROM #DTC_TraceResults
WHERE client_hostname IS NOT NULL AND client_hostname <> '';

-- Optionally, you can drop the temporary table if no longer needed
-- DROP TABLE #DTC_TraceResults;
